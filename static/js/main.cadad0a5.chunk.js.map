{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Profile","user","name","stats","followers","views","likes","className","styles","profile","description","src","avatar","alt","tag","location","label","quantity","toLocaleString","randomColor","r","Math","floor","random","g","b","toString","Statistics","title","statsSection","toUpperCase","statList","map","elem","key","id","item","style","backgroundColor","percentage","defaultProps","FriendList","friends","isOnline","status","online","width","TransactionHistory","items","transactionHistory","type","amount","currency","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cadad0a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__CdhBV\",\"avatar\":\"Profile_avatar__1HN1I\",\"name\":\"Profile_name__2J_Gp\",\"tag\":\"Profile_tag__3BljH\",\"location\":\"Profile_location__2g1zx\",\"stats\":\"Profile_stats__dydHb\",\"label\":\"Profile_label__828fv\",\"quantity\":\"Profile_quantity__3mkMv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsSection\":\"Statistics_statsSection__2l4r0\",\"statList\":\"Statistics_statList__1DGIn\",\"item\":\"Statistics_item__39C4i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend-list\":\"FriendList_friend-list__tAM9N\",\"item\":\"FriendList_item__2uHjW\",\"status\":\"FriendList_status__rl9EJ\",\"online\":\"FriendList_online__39elf\",\"avatar\":\"FriendList_avatar__3recf\",\"name\":\"FriendList_name__1qmUg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__LfcVK\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Profile.module.css';\r\n\r\n\r\nconst Profile = ({\r\n  user = { name: 'No name', stats: { followers: 0, views: 0, likes: 0 } },\r\n}) => {\r\n  return (\r\n    <section className=\"profile-section\">\r\n      <div className={styles.profile}>\r\n        <div className={styles.description}>\r\n          <img src={user.avatar} alt=\"user avatar\" className={styles.avatar} />\r\n          <p className={styles.name}>{user.name}</p>\r\n          <p className={styles.tag}>{user.tag}</p>\r\n          <p className={styles.location}>{user.location}</p>\r\n        </div>\r\n\r\n        <ul className={styles.stats}>\r\n          <li>\r\n            <span className={styles.label}>Followers</span>\r\n            <span className={styles.quantity}>\r\n              {user.stats.followers.toLocaleString()}\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span className={styles.label}>Views</span>\r\n            <span className={styles.quantity}>\r\n              {user.stats.views.toLocaleString()}\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span className={styles.label}>Likes</span>\r\n            <span className={styles.quantity}>\r\n              {user.stats.likes.toLocaleString()}\r\n            </span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  user: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    stats: PropTypes.shape({\r\n      followers: PropTypes.number.isRequired,\r\n      views: PropTypes.number.isRequired,\r\n      likes: PropTypes.number.isRequired,\r\n    }),\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst randomColor = function randomColor() {\r\n  const r = Math.floor(Math.random() * 256);\r\n  const g = Math.floor(Math.random() * 256);\r\n  const b = Math.floor(Math.random() * 256);\r\n  const randomColor = `#${r.toString(16) + g.toString(16) + b.toString(16)}`;\r\n  return randomColor;\r\n};\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  return (\r\n    <section className={styles.statsSection}>\r\n      {title && <h2 className={styles.title}>{title.toUpperCase()}</h2>}\r\n      <ul className={styles.statList}>\r\n        {stats.map(elem => (\r\n          <li\r\n            key={elem.id}\r\n            className={styles.item}\r\n            style={{ backgroundColor: randomColor() }}\r\n          >\r\n            <span className={styles.label}>{elem.label}</span>\r\n            <span className={styles.percentage}>{elem.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      label: PropTypes.string,\r\n      percentage: PropTypes.number,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FriendList.module.css';\r\n\r\n\r\nconst FriendList = ({ friends = [] }) => {\r\n  return (\r\n    <ul className={styles['friend-list']}>\r\n      {friends.map(({ id, avatar, name, isOnline }) => (\r\n        <li key={id} className={styles.item}>\r\n          <span\r\n            className={`${styles.status} ${isOnline && styles.online}`}\r\n          ></span>\r\n          <img className={styles.avatar} src={avatar} alt=\"\" width=\"48\" />\r\n          <p className={styles.name}>{name}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n\r\n\r\n// *Вариант - 2\r\n\r\n// const FriendList = ({ friends }) => {\r\n//   return (\r\n//     <ul className={styles.friendList}>\r\n//       {friends.map(prop => (\r\n//         <li key={prop.id} className={styles.item}>\r\n//           <span\r\n//             className={\r\n//               prop.isOnline ? styles.statusOnline : styles.statusOffline\r\n//             }\r\n//           />\r\n//           <img className={styles.avatar} src={prop.avatar} alt=\"\" width=\"90\" />\r\n//           <p className={styles.name}>{prop.name}</p>\r\n//         </li>\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n// };\r\n\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n    return (\r\n      <table className={styles.transactionHistory}>\r\n        <thead>\r\n          <tr>\r\n            <th>Type</th>\r\n            <th>Amount</th>\r\n            <th>Currency</th>\r\n          </tr>\r\n        </thead>\r\n  \r\n        <tbody>\r\n          {items.map(item => (\r\n            <tr key={item.id}>\r\n              <td>{item.type}</td>\r\n              <td>{item.amount}</td>\r\n              <td>{item.currency}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n  \r\n  TransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        type: PropTypes.string.isRequired,\r\n        amount: PropTypes.string.isRequired,\r\n        currency: PropTypes.string.isRequired,\r\n      }),\r\n    ).isRequired,\r\n  };\r\n  \r\n  export default TransactionHistory;","import React from 'react';\r\nimport Profile from './Profile/Profile';\r\n// import user from '../profileUser';\r\nimport user from './Profile/user.json';\r\n\r\nimport Statistics from './Statistics/Statistics'\r\nimport stats from \"./Statistics/statisticalData.json\";\r\n\r\nimport FriendList from './FriendList/FriendList';\r\nimport friends from './FriendList/friends.json';\r\n\r\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\r\nimport items from './TransactionHistory/transactions.json';\r\n\r\n\r\nconst App = () => (\r\n    <>\r\n    <Profile user={user}/>\r\n    <Statistics title=\"Upload stats\" stats={stats}/>\r\n    <FriendList friends={friends}/>\r\n    <TransactionHistory items={items}/>\r\n    </>\r\n);\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(< App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}